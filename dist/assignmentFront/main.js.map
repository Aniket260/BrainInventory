{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/brain.service.ts","./src/app/guard/auth.guard.ts","./src/app/loader.interceptor.ts","./src/app/loader.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material/material.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AuthGuard } from './guard/auth.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'prefix'},\n  { path: 'login', component: LoginComponent},\n  { path: 'signup', component: SignupComponent},\n  { path: 'home', loadChildren: () => import('./home/home.module').then(m => m.HomeModule), canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'assignmentFront';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoaderService } from './loader.service';\nimport { LoaderInterceptor } from './loader.interceptor';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MaterialModule } from './material/material';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot({\n      timeOut: 2500,\n      positionClass: 'toast-top-right',\n      preventDuplicates: false\n    }),\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [LoaderService,\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n    {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n},\n{provide: LocationStrategy, useClass: HashLocationStrategy},\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrainService {\nbaseUrl = environment.URL;\n  constructor(\n    private http: HttpClient,\n    private toastrService: ToastrService\n    ) { }\n\n  signUp(post){\n    return this.http.post(`${this.baseUrl}/v0.1/signup`, post);\n  }\n\n  login(post){\n    return this.http.post(`${this.baseUrl}/v0.1/login`, post);\n  }\n\n  getAllUser(){\n    return this.http.get(`${this.baseUrl}/v0.1/getAllUser`);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  loggedIn() {\n    if (localStorage.getItem('token') == 'undefined' || localStorage.getItem('token') === '') {\n      return !!localStorage.getItem('0')\n    }\n    return !!localStorage.getItem('token')\n  }\n\n        // tostr notifications\n\n        successMessage(message) {\n          this.toastrService.success(message);\n        }\n        ErrorMessage(message) {\n          this.toastrService.error(message);\n        }\n        infoMessage(message) {\n          this.toastrService.info(message);\n        }\n        warningMessage(message) {\n          this.toastrService.warning(message);\n        }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, NavigationEnd } from '@angular/router';\r\nimport { BrainService } from '../brain.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor( private router: Router, private service: BrainService) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.service.loggedIn()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { finalize } from \"rxjs/operators\";\r\nimport { LoaderService } from './loader.service';\r\n@Injectable()\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n    \r\n    constructor(public loaderService: LoaderService) { }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n      \r\n        this.loaderService.show();\r\n        return next.handle(req).pipe(\r\n            finalize(() => this.loaderService.hide())\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n@Injectable()\r\nexport class LoaderService {\r\n    isLoading = new Subject<boolean>();\r\n    show() {\r\n        this.isLoading.next(true);\r\n    }\r\n    hide() {\r\n        this.isLoading.next(false);\r\n    }\r\n  }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BrainService } from '../brain.service';\r\nimport { FormBuilder, FormGroup, Validators, FormsModule, NgForm } from '@angular/forms';\r\n// import { ToastrService } from 'ngx-toastr';\r\nimport { Location } from '@angular/common';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [BrainService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  // --------------------- Variables ---------------------------------------------//\r\n  loginForm: FormGroup;\r\n  payload = {};\r\n  Email: string = '';\r\n  Password: string = '';\r\n  Role: string;\r\n  message: string;\r\n  invalidPassword= false;\r\n  // -----------------------------------------------------------------------------//\r\n\r\n  // ------------------------------- Constructor ---------------------------------//\r\n  constructor(\r\n    public router: Router,\r\n    private service: BrainService,\r\n    private fb: FormBuilder,\r\n  ) {\r\n\r\n    // To initialize FormGroup\r\n    this.loginForm = fb.group({\r\n      'Email': [null, Validators.required],\r\n      'Password': [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  // -----------------------------------------------------------------------------//\r\n\r\n  ngOnInit() {\r\n    const token = this.service.getToken();\r\n    if (token) {\r\n      this.backClicked();\r\n    }\r\n  }\r\n\r\n  backClicked() {\r\n    debugger\r\n    this.router.navigate(['/home/user']);\r\n  }\r\n\r\n  login(form: NgForm) {\r\n    debugger;\r\n\r\n    // console.log(form);\r\n    //\r\n    const UserDetails = {\r\n      email: form['Email'],\r\n      password: form['Password']\r\n    };\r\n    this.service.login(UserDetails).subscribe((data) => {\r\n      if (data['success']) {\r\n        debugger;\r\n        localStorage.setItem('token', data['token']);\r\n        localStorage.setItem('userId', data['user']['_id']);\r\n\r\n        localStorage.setItem('email', data['user']['email']);\r\n        this.message = 'Login Successful';\r\n        this.service.successMessage(this.message);\r\n\r\n        this.router.navigate(['/home/user']);\r\n      }\r\n    }, (err) => {\r\n      this.invalidPassword = true;\r\n      const Email = document.getElementById('email');\r\n      Email.className = 'errorTextBox';\r\n      const Password = document.getElementById('password');\r\n      Password.className = 'errorTextBox';\r\n    });\r\n  }\r\n\r\n  signUp() {\r\n    this.router.navigate(['/signup']);\r\n  }\r\n}\r\n","<div class=\"row\" style=\"width:100%;height:100%\">\r\n    <div class=\"col-md-7\" style=\"padding: 0%;\">\r\n        <img src=\"../../assets/images/2870 1.png\" style=\"width: 100%;height: auto;\">\r\n    </div>\r\n\r\n    <div class=\"col-md-5\">\r\n        <div style=\"padding: 3%;\">\r\n            <img src=\"../../assets/images/The Pipeline Group.png\">\r\n        </div>\r\n        <div>\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm.value)\">\r\n                <div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 display\">\r\n                            <img src=\"../../assets/images/Group 15.png\" *ngIf=\"!invalidPassword\">\r\n                            <img src=\"../../assets/images/Group 15-sad.png\" *ngIf=\"invalidPassword\">\r\n                        </div>\r\n                        <div class=\"col-md-12 display\">\r\n                            <h4>Login to your account</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"form-group display\">\r\n                            <input type=\"text\" formControlName=\"Email\" class=\"form-control\" id=\"email\" placeholder=\"User name/ Email ID\" name=\"email\" style=\"width: 60%;\">\r\n                        </div>\r\n                        <div class=\"form-group display\">\r\n                            <input type=\"password\" placeholder=\"Password\" formControlName=\"Password\" id='password' class=\"form-control\" style=\"width:60%\">\r\n                        </div>\r\n                        <div class=\"row\" style=\"padding: 0%;\">\r\n                            <div class=\"col-md-2\" ></div>\r\n                            <div class=\"col-md-8 row\" style=\"padding-right: 3%;padding-left: 7%;\">\r\n                                <div class=\"col-md-8\" style=\"padding: 0%;\">\r\n                                    <p class=\"errorText\" *ngIf=\"invalidPassword\">Invalid User name or Password</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-2\"></div>\r\n                        </div>\r\n\r\n                        <div style=\"margin-top: 3%;\">\r\n\r\n                        </div>\r\n\r\n                        <div class=\"form-element display\">\r\n                            <button type=\"submit\" class=\"btnSubmit\" [disabled]=\"!loginForm.valid\" >Login</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n\r\n        <div style=\"bottom: 0%;margin-top: 5%;text-align: center;\">\r\n            Don't have an account <a class=\"text text-primary\" (click)=\"signUp()\">SignUp</a>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatAutocompleteModule,\r\n    MatButtonToggleModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n\r\n  ],\r\n  exports:[\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatAutocompleteModule,\r\n    MatButtonToggleModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n  ]\r\n})\r\nexport class MaterialModule { }","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Observable }    from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { BrainService } from '../brain.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css'],\r\n  providers: [BrainService]\r\n\r\n})\r\nexport class SignupComponent {\r\n\r\n  // --------------------- Variables ---------------------------------------------//\r\n  formGroup: FormGroup;\r\n  titleAlert: string = 'This field is required';\r\n  post: any = '';\r\n\r\n\r\n    // ------------------------------- Constructor ---------------------------------//\r\n    constructor(\r\n      private formBuilder: FormBuilder,\r\n      public router: Router,\r\n      private service: BrainService,\r\n      ) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    const emailregex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    this.formGroup = this.formBuilder.group({\r\n      email: [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\r\n      name: [null, Validators.required],\r\n      password: [null, [Validators.required, this.checkPassword]],\r\n      phoneNumber: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  get name() {\r\n    return this.formGroup.get('name') as FormControl;\r\n  }\r\n\r\n  checkPassword(control) {\r\n    const enteredPassword = control.value;\r\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\r\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\r\n  }\r\n\r\n  checkInUseEmail(control) {\r\n    // mimic http database access\r\n    const db = ['tony@gmail.com'];\r\n    return new Observable(observer => {\r\n      setTimeout(() => {\r\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\r\n        observer.next(result);\r\n        observer.complete();\r\n      }, 4000);\r\n    });\r\n  }\r\n\r\n  getErrorEmail() {\r\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\r\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid email address' :\r\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This email address is already in use' : '';\r\n  }\r\n\r\n  getErrorPassword() {\r\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\r\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\r\n  }\r\n\r\n\r\n  onSubmit(post) {\r\n    debugger;\r\n\r\n    const userDetails = {\r\n      name: post.name,\r\n      email: post.email,\r\n      password: post.password,\r\n      phoneNumber: post.phoneNumber\r\n    };\r\n    this.service.signUp(userDetails).subscribe(res => {\r\n  debugger;\r\n  if (res['success']){\r\n    this.router.navigate(['/login']);\r\n  }\r\n}, err => {\r\n    debugger;\r\n    this.service.ErrorMessage('Error occurred while Signing In');\r\n    alert(err['error']['message']);\r\n  });\r\n  }\r\n\r\n  login(){\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","<div class=\"row\" style=\"background-image: linear-gradient(to right, #3D4396, #5383EC);height: 100%;width: 100%;align-items: center;justify-content: center;\">\r\n\r\n  <div class=\"col-md-6\" style=\"align-items: center;justify-content: center;display: flex;\">\r\n    <img src=\"../../assets/images/Pipeee.png\">\r\n</div>\r\n<div class=\"col-md-6\" style=\"align-items: center;justify-content: center;display: flex;border-left: 5px solid white;\">\r\n\r\n        <mat-card style=\"height: fit-content;\">\r\n            <mat-card-title style=\"text-align: center;\"> Sign Up</mat-card-title>\r\n            <br>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit(formGroup.value)\" class=\"form\">\r\n                    <p>\r\n                        <mat-form-field class=\"form-element\">\r\n                            <input matInput placeholder=\"Name\" formControlName=\"name\">\r\n                            <mat-error *ngIf=\"!name.valid && name.touched\">\r\n                              Name is required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <mat-form-field class=\"form-element\">\r\n                            <input matInput placeholder=\"Email\" formControlName=\"email\">\r\n                            <mat-error *ngIf=\"!formGroup.controls['email'].valid && formGroup.controls['email'].touched\">\r\n                              {{ getErrorEmail()}}\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field class=\"form-element\">\r\n                            <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\">\r\n                            <mat-hint>Choose a password of at least eight characters, one uppercase letter and one number</mat-hint>\r\n                            <mat-error *ngIf=\"!formGroup.controls['password'].valid && formGroup.controls['password'].touched\">\r\n                              {{ getErrorPassword() }}\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                          <input matInput placeholder=\"Phone Number\" formControlName=\"phoneNumber\">\r\n                          <mat-error *ngIf=\"!formGroup.controls['phoneNumber'].touched\">\r\n                            Phone Number is required!\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                    </p>\r\n\r\n                    <div class=\"form-element\">\r\n                        <button mat-raised-button color=\"primary\" style=\"width: 100%;background-color: #3D4396;color:white;\" type=\"submit\" class=\"button\" [disabled]=\"!formGroup.valid\">Sign Up</button>\r\n                      </div>\r\n\r\n                      <p style=\"text-align: center;\">\r\n                          Already have an account?<a (click)='login()' class=\"text text-primary\">Login</a>\r\n                      </p>\r\n\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n\r\n</div>\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { BrainService } from './brain.service';\r\n\r\n@Injectable({\r\n   providedIn: 'root'\r\n   })\r\n\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private injector: Injector){ }\r\n  intercept(req, next) {\r\n\r\n    const serviceFarm = this.injector.get(BrainService);\r\n\r\n    const tokenizedReq = req.clone({\r\n      setHeaders: {\r\n        Authorization : `${serviceFarm.getToken()}` // Read token\r\n      }\r\n    });\r\n    return next.handle(tokenizedReq);\r\n  }\r\n}\r\n\r\n// complete\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  URL: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}